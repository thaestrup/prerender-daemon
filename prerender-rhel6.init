#!/bin/bash
### BEGIN INIT INFO
# Provides:          prerender
# Required-Start:    networking
# Required-Stop:     networking
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Run prerender collector as daemon
# Description:       Run prerender collector as daemon
### END INIT INFO

. /etc/init.d/functions

NAME="prerender"
PIDDIR="/var/run/prerender"
PIDFILE="$PIDDIR/prerender.pid"
APP_DIR="/usr/bin"
APP_BIN="prerender"
APP_ARGS=""
USER="prerender"
GROUP="prerender"
DAEMON="$APP_DIR/$APP_BIN"

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

# Read configuration variable file if it is present
[ -r /etc/sysconfig/$NAME ] && . /etc/sysconfig/$NAME

start() {
	echo -n "Starting $NAME..."
	mkdir -p $PIDDIR

	daemon --user="$USER" --pidfile="$PIDFILE" "$DAEMON $APP_ARGS &"
  RETVAL=$?
  pid=`ps -A | grep $NAME | cut -d" " -f2`
  pid=`echo $pid | cut -d" " -f2`
  if [ -n "$pid" ]; then
          echo $pid > "$PIDFILE"
  fi
  echo
  return $RETVAL
}

stop() {
	echo -n "Stopping $NAME..."
	killproc -p "$PIDFILE" -d 10 "$DAEMON"
	RETVAL="$?"
	echo
	[ $RETVAL = 0 ] && rm -f "$PIDFILE"
	return "$RETVAL"
}


rh_status() {
    # run checks to determine if the service is running or use generic status
    status -p $PIDFILE $NAME
		RETVAL="$?"
		return "$RETVAL"
}

case "$1" in
    start)
        start
        ;;

    stop)
        stop
        ;;

    restart|reload|force-reload)
        stop
        sleep 2
        start
        ;;

    status)
        rh_status
        ;;

    *)
        echo "Usage: service $NAME {start|stop|reload|force-reload|restart|status} (you might need sudo)"
        exit 2
esac

exit $RETVAL
